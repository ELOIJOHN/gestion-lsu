version: '3.8'

services:
  # Application principale LSU
  lsu-app:
    build:
      context: ..
      dockerfile: deploy/Dockerfile
    container_name: lsu-ecole-cap-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - LSU_ENVIRONMENT=prod
    volumes:
      - lsu_data:/app/data
      - lsu_uploads:/app/static/uploads
    restart: unless-stopped
    depends_on:
      - lsu-db
    networks:
      - lsu-network

  # Base de données SQLite (optionnel, pour les données persistantes)
  lsu-db:
    image: alpine:latest
    container_name: lsu-ecole-cap-db
    volumes:
      - lsu_db_data:/var/lib/lsu
    command: >
      sh -c "
        apk add --no-cache sqlite &&
        mkdir -p /var/lib/lsu &&
        sqlite3 /var/lib/lsu/lsu.db '
          CREATE TABLE IF NOT EXISTS eleves (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            prenom TEXT NOT NULL,
            nom TEXT NOT NULL,
            classe TEXT NOT NULL,
            date_naissance DATE,
            notes TEXT,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
          );
          CREATE TABLE IF NOT EXISTS commentaires (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            eleve_id INTEGER,
            periode TEXT NOT NULL,
            niveau TEXT NOT NULL,
            commentaire TEXT NOT NULL,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            FOREIGN KEY (eleve_id) REFERENCES eleves (id)
          );
          CREATE TABLE IF NOT EXISTS photos (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            classe TEXT NOT NULL,
            filename TEXT NOT NULL,
            path TEXT NOT NULL,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
          );
        '
      "
    restart: unless-stopped
    networks:
      - lsu-network

  # Serveur web Nginx (reverse proxy)
  lsu-nginx:
    image: nginx:alpine
    container_name: lsu-ecole-cap-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - lsu_uploads:/var/www/uploads:ro
    depends_on:
      - lsu-app
    restart: unless-stopped
    networks:
      - lsu-network

  # Service de monitoring (optionnel)
  lsu-monitor:
    image: prom/prometheus:latest
    container_name: lsu-ecole-cap-monitor
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - lsu-network

  # Service de logs (optionnel)
  lsu-logs:
    image: grafana/grafana:latest
    container_name: lsu-ecole-cap-logs
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=lsu2025
    volumes:
      - grafana_data:/var/lib/grafana
    restart: unless-stopped
    networks:
      - lsu-network

  # Service de backup automatique
  lsu-backup:
    image: alpine:latest
    container_name: lsu-ecole-cap-backup
    volumes:
      - lsu_data:/app/data:ro
      - lsu_db_data:/var/lib/lsu:ro
      - ./backups:/backups
    command: >
      sh -c "
        apk add --no-cache sqlite tar gzip &&
        while true; do
          echo 'Création du backup...' &&
          BACKUP_FILE=/backups/lsu_backup_\$(date +%Y%m%d_%H%M%S).tar.gz &&
          tar -czf \$BACKUP_FILE -C /app data -C /var/lib/lsu . &&
          echo 'Backup créé: \$BACKUP_FILE' &&
          # Garder seulement les 10 derniers backups
          ls -t /backups/lsu_backup_*.tar.gz | tail -n +11 | xargs -r rm &&
          sleep 86400
        done
      "
    restart: unless-stopped
    networks:
      - lsu-network

volumes:
  lsu_data:
    driver: local
  lsu_db_data:
    driver: local
  lsu_uploads:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  lsu-network:
    driver: bridge 